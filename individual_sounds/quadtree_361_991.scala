// (361,991)
play {
//   RandID.ir(6)
//   RandSeed.ir(1, 14)
  
val dC            = DC.ar(-2726.2134)
val gbmanL        = GbmanL.ar(freq = 419.73846, xi = -2726.2134, yi = -953.0853)
val xpos          = FBSineN.ar(freq = 666.4933, im = 0.262003, fb = 0.0024461357, a = -2029.8915, c = -2726.2134, xi = 23.868387, yi = 637.2363)
val freq_0        = BBandStop.ar(0.262003, freq = 0.00788784, bw = 637.2363)
val standardN     = StandardN.ar(freq = freq_0, k = 9.444879E-4, xi = -610.7519, yi = 3.0152974)
val tBall         = TBall.ar(419.73846, g = 0.0024461357, damp = -2029.8915, friction = standardN)
val pan4          = Pan4.ar(0.0016222644, xpos = xpos, ypos = 913552.7, level = 3.0152974)
val setResetFF    = SetResetFF.ar(trig = -0.0029116, reset = 7.883595)
val tExpRand      = TExpRand.ar(lo = 419.73846, hi = setResetFF, trig = pan4)
val in_0          = Formant.ar(fundFreq = 0.0016222644, formFreq = tExpRand, bw = 4073.4182)
val a_0           = Klank.ar(specs = pan4, in = in_0, freqScale = tExpRand, freqOffset = 0.020259222, decayScale = 637.2363)
val in_1          = LatoocarfianL.ar(freq = freq_0, a = a_0, b = 715.6667, c = 4073.4182, d = -610.7519, xi = 12.325766, yi = tExpRand)
val bBandStop     = BBandStop.ar(9.444879E-4, freq = standardN, bw = 0.262003)
val twoPole       = TwoPole.ar(in_1, freq = bBandStop, radius = 0.0016222644)
val peakFollower  = PeakFollower.ar(-962.5887, decay = -0.014707425)
val bRF_0         = BRF.ar(bBandStop, freq = freq_0, rq = -962.5887)
val trig1         = Trig1.ar(419.73846, dur = setResetFF)
val bRF_1         = BRF.ar(419.73846, freq = -0.0029116, rq = 715.6667)
val mix_0         = Mix(Seq[GE](bRF_1, trig1, bRF_0, peakFollower, twoPole, tBall, gbmanL, dC))

  val bad = CheckBadValues.ar(Mix.Mono(mix_0), id = 0.0, post = 0.0)
  val lim = LeakDC.ar(Limiter.ar(LeakDC.ar(Gate.ar(Mix.Mono(mix_0), gate = bad sig_== 0.0))))
  Out.ar(0, lim)
}
