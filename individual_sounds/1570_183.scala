def ConfigOut(in: GE) = Out.ar(0, Pan2.ar(Limiter.ar(LeakDC.ar(in))))

play {
  // RandSeed.ir(trig = 1, seed = 56789.0)
  val brownNoise    = BrownNoise.ar(432.45282)
  val freq_0        = LeastChange.ar(a = 15.518214, b = -220.16957)
  val c_0           = LFClipNoise.ar(freq_0)
  val fBSineL       = FBSineL.ar(freq = -18.27692, im = 0.24625367, fb = 3.302296, a = 432.45282, c = c_0, xi = 100.55316, yi = 0.24625367)
  val decayTime     = BRF.ar(-0.0029116, freq = 683.00226, rq = 419.73846)
  val lag3          = Lag3.ar(191.68068, time = 24.484936)
  val gbmanL        = GbmanL.ar(freq = 419.73846, xi = -2726.2134, yi = 24.484936)
  val freq_1        = AllpassN.ar(15.518214, maxDelayTime = 0.45230204, delayTime = -0.006679056, decayTime = decayTime)
  val a_0           = VarSaw.ar(freq = freq_1, iphase = 742.4219, width = -18.27692)
  val quadC         = QuadC.ar(freq = -2726.2134, a = a_0, b = 419.48956, c = 683.00226, xi = -0.0028438699)
  val lPZ1          = LPZ1.ar(-0.062251624)
  val coinGate      = CoinGate.ar(22.096382, prob = 9693.91)
  val c_1           = Sum4(coinGate, -220.16957, 0.42893913, -2726.2134)
  val lFSaw         = LFSaw.ar(freq = freq_0, iphase = 1.0302194)
  val latoocarfianC = LatoocarfianC.ar(freq = 1711.0236, a = 9693.91, b = -0.0028438699, c = c_1, d = 0.45230204, xi = 742.4219, yi = -2726.2134)
  val allpassN      = AllpassN.ar(15.518214, maxDelayTime = 0.45230204, delayTime = -0.006679056, decayTime = decayTime)
  val envGen_Perc   = EnvGen_Perc(allpassN, allpassN, -9876.091, 100.55316, 191.68068, -2726.2134, 1.0)
  val mix           = Mix(Seq[GE](envGen_Perc, latoocarfianC, lFSaw, lPZ1, quadC, gbmanL, lag3, fBSineL, brownNoise))
  val mono          = Mix.Mono(mix)
  ConfigOut(mono)
}
